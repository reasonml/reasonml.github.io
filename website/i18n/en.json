{
  "_comment": "This file is auto-generated by write-translations.js",
  "localized-strings": {
    "next": "Next",
    "previous": "Previous",
    "tagline": "Reason lets you write simple, fast and quality type safe code while leveraging both the JavaScript & OCaml ecosystems.",
    "docs": {
      "articles-and-videos": {
        "title": "Articles & Videos"
      },
      "boolean": {
        "title": "Boolean"
      },
      "community-examples": {
        "title": "Examples"
      },
      "community": {
        "title": "Community"
      },
      "converting-from-js": {
        "title": "Converting from JS"
      },
      "destructuring": {
        "title": "Destructuring"
      },
      "draft-blog-posts": {
        "title": "Draft Blog Posts"
      },
      "editor-plugins": {
        "title": "Editor Plugins"
      },
      "events": {
        "title": "Events"
      },
      "exception": {
        "title": "Exception"
      },
      "external": {
        "title": "External"
      },
      "extra-goodies": {
        "title": "Extra Goodies"
      },
      "faq": {
        "title": "Frequently Asked Questions"
      },
      "function": {
        "title": "Function"
      },
      "if-else": {
        "title": "If-Else"
      },
      "imperative-loops": {
        "title": "Imperative Loops"
      },
      "installation": {
        "title": "Installation"
      },
      "integer-and-float": {
        "title": "Integer & Float"
      },
      "interop": {
        "title": "Interop"
      },
      "jsx": {
        "title": "JSX"
      },
      "let-binding": {
        "title": "Let Bindings"
      },
      "libraries": {
        "title": "Libraries"
      },
      "list-and-array": {
        "title": "List & Array"
      },
      "module": {
        "title": "Module"
      },
      "more-on-type": {
        "title": "More on Type"
      },
      "mutable-bindings": {
        "title": "Mutable Bindings"
      },
      "mutation": {
        "title": "Mutation"
      },
      "native": {
        "title": "Native"
      },
      "newcomer-examples": {
        "title": "Newcomer Examples"
      },
      "null-undefined-option": {
        "title": "Null, Undefined & Option"
      },
      "object": {
        "title": "Object"
      },
      "overview": {
        "title": "Overview"
      },
      "pattern-matching": {
        "title": "Pattern Matching!"
      },
      "pipe-first": {
        "title": "Pipe First"
      },
      "project-structure": {
        "title": "Project Structure"
      },
      "promise": {
        "title": "Promise"
      },
      "quickstart-javascript": {
        "title": "Quickstart"
      },
      "quickstart-ocaml": {
        "title": "Native Quickstart"
      },
      "record": {
        "title": "Records"
      },
      "recursion": {
        "title": "Recursion"
      },
      "regular-expression": {
        "title": "Regular Expression"
      },
      "roadmap": {
        "title": "Roadmap & Contribution"
      },
      "string-and-char": {
        "title": "String & Character"
      },
      "syntax-cheatsheet": {
        "title": "Syntax Cheatsheet"
      },
      "tuple": {
        "title": "Tuple"
      },
      "type": {
        "title": "Type!"
      },
      "variant": {
        "title": "Variant!"
      },
      "what-and-why": {
        "title": "What & Why"
      }
    },
    "links": {
      "Docs": "Docs",
      "Try": "Try",
      "API": "API",
      "Community": "Community",
      "Blog": "Blog",
      "GitHub": "GitHub"
    },
    "categories": {
      "Intro": "Intro",
      "Setup": "Setup",
      "Language Basics": "Language Basics",
      "JavaScript": "JavaScript",
      "Native": "Native",
      "Extra": "Extra",
      "Community": "Community"
    }
  },
  "pages-strings": {
    "Try Online|no description given": "Try Online",
    "Types without hassle|no description given": "Types without hassle",
    "Powerful, safe type inference means you rarely have to annotate types, but everything gets checked for you.|no description given": "Powerful, safe type inference means you rarely have to annotate types, but everything gets checked for you.",
    "Easy JavaScript interop|no description given": "Easy JavaScript interop",
    "Use packages from NPM/Yarn with minimum hassle, or even drop in a snippet of raw JavaScript while you're learning!|no description given": "Use packages from NPM/Yarn with minimum hassle, or even drop in a snippet of raw JavaScript while you're learning!",
    "Flexible & Fun|no description given": "Flexible & Fun",
    "Make websites, animations, games, servers, cli tools, and more! Take a look at these examples to get inspired.|no description given": "Make websites, animations, games, servers, cli tools, and more! Take a look at these examples to get inspired.",
    "QuickStart|no description given": "QuickStart",
    "It runs in watch mode, so any changes to files will be picked up and compiled.|no description given": "It runs in watch mode, so any changes to files will be picked up and compiled.",
    "Read more here!|no description given": "Read more here!",
    "Examples|no description given": "Examples",
    "Users of Reason|no description given": "Users of Reason",
    "See Full List|no description given": "See Full List",
    "Here are some of the folks successfully using Reason and BuckleScript in production, today!|no description given": "Here are some of the folks successfully using Reason and BuckleScript in production, today!",
    "Add yours (SVG logo preferred)|no description given": "Add yours (SVG logo preferred)",
    "Help Translate|recruit community translators for your project": "Help Translate",
    "Edit this Doc|recruitment message asking to edit the doc source": "Edit",
    "Translate this Doc|recruitment message asking to translate the docs": "Translate"
  }
}
